@page
@model PROYECTO_TIENDA.Pages.Catalogos.CatViewInventarioModel
@{
}
<script type="module">
    import CreateTable from "../js/TableComponent.js";
    import CreateDropDown from "../js/DropDownComponent.js";
    let Producto;
    const CargarDatos = async () => {
        let UrlP = "../api/ValuesControllerInventario/TakeDataForInventario";
        let response = await fetch(UrlP, {
            method: "POST",
            headers: {
                'Content-Type': "application/json; charset=utf-8",
                'Accept': "*/*"
            }
        });

        response = await response.json();
        console.log(response);
        //CARGA INVENTARIO
        CreateTable(response[0], TableData, FunctionEdit);

        //CARGA PRODUCTO -MODAL
        Producto = response[1]
        CreateTable(Producto, TableProducto, FunctionSeleccionar, "Seleccionar");

        //TEXTO BUSQUEDA
        TxtBusquedaProducto.onchange = (ev) => {
            const parametro = ev.target.value;
            const ProductosFiltrados = Producto.filter(x => x.nombreProducto.includes(parametro));
            CreateTable(ProductosFiltrados, TableProducto, FunctionSeleccionar, "Seleccionar");
        }

        CreateDropDown(response[2], DropMarca, "idMarca", "marca");
        CreateDropDown(response[3], DropTalla, "idTalla", "talla");

    }

    //AGREDAR PRODUCTO DE MODAL A INPUT
    const FunctionSeleccionar = async (Item) => {
        console.log(Item)
        TxtProducto.value = Item.idProducto;
        ModalFunction(ModalProducto)
    }
    const FunctionEdit = async (Item) => {
        TxtIdInventario.value = Item.idInventario;
        TxtProducto.value = Item.producto;
        TxtDateTime.value = Item.fecha;
        DropMarca.value = Item.marca;
        DropTalla.value = Item.talla;
        TxtPrecioCompra.value = Item.precioCompra;
        TxtMedida.value = Item.unidad_Medida;
        TxtMinimo.value = Item.stockMinimo;
        TxtMaximo.value = Item.stockMaximo;
        TxtActual.value = Item.stockActual;
    }
    window.onload = async () => {
        BtnSave.onclick = async () => {
            const ObjInst = {
                IdInventario: TxtIdInventario.value,
                Producto: TxtProducto.value,
                Fecha: TxtDateTime.value,
                Marca: DropMarca.value,
                Talla: DropTalla.value,
                PrecioCompra: TxtPrecioCompra.value,
                Unidad_Medida: TxtMedida.value,
                StockMinimo: TxtMinimo.value,
                StockMaximo: TxtMaximo.value,
                StockActual: TxtActual.value
            }

            let flag = true;
            for (var prop in ObjInst) {
                if (ObjInst[prop] == "") {
                    flag = false;
                    alert("la propiedad " + prop + " es requerida");
                    break;
                }
            }

            if (!flag) {
                return;
            }

            let Url = "../api/ValuesControllerInventario/SaveInventario";
            let response = await fetch(Url, {
                method: "POST",
                headers: {
                    'Content-Type': "application/json; charset=utf-8",
                    'Accept': "*"
                },
                body: JSON.stringify(ObjInst)
            });
            response = await response.json();
            if (response == true) {
                alert("Datos Guardados");
                window.location.reload();
            }
        }
        CargarDatos();
        BtnModalProducto.onclick = () => {
            ModalFunction(ModalProducto);
        }
        BtnCerrarProducto.onclick = () => {
            ModalFunction(ModalProducto);
        }
    }
</script>
<div></div>
<div class="FrmContainer">
    <div hidden="true">
        Id Inventario:
        <input class="TxtForm" type="number" id="TxtIdInventario" value="-1" />
    </div>
    <div>
        Producto:
        <input class="TxtForm" type="text" id="TxtProducto" placeholder="Propiedad..." disabled/>
    </div>
    <div>
        Fecha:
        <input class="TxtForm" type="date" id="TxtDateTime" placeholder="Propiedad..." />
    </div>
    <div>
        Marca:
        <select class="TxtForm minimal" id="DropMarca">
            <option value="0">Seleccionar Marca</option>
        </select>
    </div>
    <div>
        Talla:
        <select class="TxtForm minimal" id="DropTalla">
            <option value="0">Seleccionar Talla</option>
        </select>
    </div>
    <div>
        PrecioCompra:
        <input class="TxtForm" type="number" id="TxtPrecioCompra" placeholder="Propiedad..." />
    </div>
    <div>
        Unidad de medida:
        <input class="TxtForm" type="text" id="TxtMedida" placeholder="Propiedad..." value="DOCENAS" disabled/>
    </div>
    <div>
        Stock minimo:
        <input class="TxtForm" type="number" id="TxtMinimo" placeholder="Propiedad..." />
    </div>
    <div>
        Stock maximo:
        <input class="TxtForm" type="number" id="TxtMaximo" placeholder="Propiedad..." />
    </div>
    <div>
        Stock actual:
        <input class="TxtForm" type="number" id="TxtActual" placeholder="Propiedad..." />
    </div>
</div>
<div class="FrmContainer">
    <div>
        <input class="BTN BTNOK2" type="button" id="BtnSave" value="Guardar" />
        <input class="BTN BTNOK2" type="button" id="BtnModalProducto" value="Agregar Producto" />
    </div>
</div>
<table id="TableData" class="FrmTable">
    <thead>
    </thead>
    <tbody>
    </tbody>
</table>


<div class="ModalContent" id="ModalProducto">
    <div class="ContainerForm">
        <input type="text" id="TxtBusquedaProducto" placeholder="Buscar..." value="" />
        <table id="TableProducto" class="FrmTable">
            <thead>
            </thead>
            <tbody>
            </tbody>
        </table>

        <div class="FrmContainer">
            <div>
                <input class="BTN BTNOK2" type="button" id="BtnCerrarProducto" value="Cerrar" />
            </div>
        </div>
    </div>
</div>


